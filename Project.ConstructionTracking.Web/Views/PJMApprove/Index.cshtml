@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutSite.cshtml";
    var ProjectID = ViewBag.ProjectID;
    var ProjectName = ViewBag.ProjectName;
    var UnitID = ViewBag.UnitID;
    var UnitCode = ViewBag.UnitCode;
    var UnitFormID = ViewBag.UnitFormID;
    var FormID = ViewBag.FormID;
    var FormName = ViewBag.FormName;
    var PJM_Actiontype = ViewBag.PJM_Actiontype;
    var PJM_ActionDate = ViewBag.PJM_ActionDate;
    var PJM_StatusID = ViewBag.PJM_StatusID;
    var PJMUnitFormRemark = ViewBag.PJMUnitFormRemark;
    var ListChecklistPJMApprove = ViewBag.ListChecklistPJMApprove;
    var ListPJMImage = ViewBag.ListPJMImage;
}

<style>
    .status-dot {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        color: white;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 0 auto;
        border: none;
        outline: none;
        font-size: 18px;
    }

    .card {
        border: none;
        border-radius: 10px
    }
    .drop-zone {
        border: 2px dashed #007bff;
        border-radius: 5px;
        padding: 6px;
        text-align: center;
        cursor: pointer;
    }

    .drop-zone-text {
        margin-bottom: 10px;
    }

    .drop-zone-input {
        display: none;
    }

    .preview-container {
        margin-top: 10px;
    }

    .preview-image {
        position: relative;
        display: inline-block;
        margin-right: 10px;
        margin-bottom: 10px;
        max-width: 100px;
        max-height: 100px;
    }

    .preview-image img {
        max-width: 100%;
        max-height: 100%;
        border: 1px solid #ddd;
        border-radius: 5px;
        display: block;
    }

    .remove-button {
        position: absolute;
        top: 0;
        right: 0;
        background: rgba(255, 0, 0, 0.8);
        color: white;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        font-size: 14px;
        width: 24px;
        height: 24px;
        line-height: 18px;
        text-align: center;
        padding: 0;
    }
</style>

<div class="page-wrapper">
    <div class="page-header d-print-none">
        <div class="card bg-primary text-primary-fg">
            <div class="card-stamp">
                <div class="card-stamp-icon bg-white text-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-home-heart">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M21 12l-9 -9l-9 9h2v7a2 2 0 0 0 2 2h6" />
                        <path d="M9 21v-6a2 2 0 0 1 2 -2h2c.39 0 .754 .112 1.061 .304" />
                        <path d="M19 21.5l2.518 -2.58a1.74 1.74 0 0 0 0 -2.413a1.627 1.627 0 0 0 -2.346 0l-.168 .172l-.168 -.172a1.627 1.627 0 0 0 -2.346 0a1.74 1.74 0 0 0 0 2.412l2.51 2.59z" />
                    </svg>
                </div>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div class="d-flex flex-row align-items-baseline">
                        <form action="@Url.Action("index","PJMFormcheck")" method="post">
                            <button class="status-dot bg-transparent">
                                <i class="fa-solid fa-chevron-left fa-xl" style="color: #f7f7f7;"></i>
                            </button>
                        </form>
                    </div>
                    <div class="d-block d-sm-flex align-items-baseline custom-heading">
                        <h1 class="mb-0 header-text">@UnitCode : @FormName</h1>
                        <div class="text-muted">
                            <h5 class="text-yellow d-block d-sm-inline ms-sm-2 mb-0">@ProjectName</h5>
                        </div>
                    </div>
                    <div class="align-items-right">
                        <button class="status-dot bg-transparent">
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="page-body">
        <div class="container mt-1 mb-2">
            <div class="row">
                @foreach (var item in @ListChecklistPJMApprove)
                {
                    <div class="col-md-4">
                        <div class="card p-3 mb-2">
                            <div class="d-flex justify-content-between">
                                <div class="d-flex flex-row align-items-center">
                                    <form action="@Url.Action("Index","FormCheckList" , new { unitId = item.UnitID, FormID = item.FormID , GroupID = item.GroupID})" method="post">
                                        @{
                                            string buttonClass = "bg-green";
                                            string iconClass = "fa-solid fa-magnifying-glass";

                                            if (item.LockStatusID != null)
                                            {
                                                buttonClass = "bg-primary";
                                                iconClass = "fa-solid fa-lock";
                                            }
                                        }
                                        <button class="status-dot @buttonClass">
                                            <i class="@iconClass"></i>
                                        </button>
                                    </form>
                                    <div class="ms-2 c-details">
                                        <h3 class="mb-0">
                                            @item.GroupName
                                        </h3>
                                    </div>
                                </div>
                                <div class="align-items-right">
                                    <!-- Button to open the modal and fetch images -->
                                    <button class="status-dot bg-primary"
                                            onclick="openModal('@item.UnitFormID', '@item.GroupID',@item.FormID)">
                                        <i class="fa-regular fa-image"></i>
                                    </button>
                                </div>
                            </div>
                            <label class="form-label">
                                ความเห็นจากวิศวกร
                            </label>
                            <textarea rows="2" class="form-control" placeholder="ความคิดเห็น" disabled>@item.PE_Remark</textarea>
                            <label class="form-label">
                                ความเห็นจากวิศวกรผู้คุมโครงการ
                            </label>
                            <textarea rows="2" class="form-control" placeholder="ความคิดเห็น" disabled>@item.PM_Remark</textarea>
                                <div class="col-12 p-1">
                                    <label class="form-label">
                                        อนุมัติการผ่านแบบมีเงื่อนไข
                                    </label>
                                    <label class="form-check form-check-inline">
                                    <input class="form-check-input" data-action="gr-pass" type="radio" group-id="@item.GroupID" name="radios-inline-@item.GroupID" passconID="@item.PC_ID" value="8" @(item.PC_StatusID == 8 ? "checked" : "") @(PJM_Actiontype == "submit" ? "disabled" : "") onclick="toggleRadio(this)">
                                        <span class="form-check-label">อนุมัติ</span>
                                    </label>
                                    <label class="form-check form-check-inline">
                                    <input class="form-check-input" data-action="gr-pass" type="radio" group-id="@item.GroupID" name="radios-inline-@item.GroupID" passconID="@item.PC_ID" value="9" @(item.PC_StatusID == 9 ? "checked" : "") @(PJM_Actiontype == "submit" ? "disabled" : "") onclick="toggleRadio(this)">
                                        <span class="form-check-label">ไม่อนุมัติ</span>
                                    </label>
                                </div>
                                <div class="col-12 p-1 mb-2">
                                <textarea id="remark_@item.GroupID" rows="1" class="form-control" placeholder="ระบุเหตุผลเพื่อขออนุมัติ" @(item.PJM_Actiontype == "submit" ? "disabled" : "")>@item.PJM_Remark</textarea>
                                </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="container-xl mb-3">
            <div class="card">
                <div class="card-header">
                    <div class="ribbon ribbon-top bg-yellow">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-pencil">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
                            <path d="M13.5 6.5l4 4" />
                        </svg>
                    </div>
                    <h3 class="card-title align-center">
                        <span class="material-icons"> account_circle </span> บันทึกผลการอนุมัติผ่านแบบมีเงื่อนไขในงวดนี้
                    </h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-12 col-sm-6">
                            <!-- Profile Image -->
                                @foreach (var listimage in ListPJMImage)
                            {
                                <div class="position-relative d-inline-block mb-3">
                                    <a data-fslightbox="gallery" href="~/@listimage.FilePath">
                                        <img src="~/@listimage.FilePath" alt="Profile Image" class="img-thumbnail" style="width: 90px; height: 90px; border-radius: 50%; object-fit: cover;">
                                    </a>
                                    @if (PJM_Actiontype != "submit")
                                    {
                                        <button type="button" class="remove-button" onclick="deleteImage('@listimage.ResourceID')">✖</button>
                                    }
                                </div>
                            }
                        </div>
                        <div class="col-12 col-sm-6">
                            <div class="row">
                                @if (PJM_Actiontype != "submit")
                                {
                                    <div class="col-12 p-3">
                                        <div id="drop-zone" class="drop-zone">
                                            <p class="drop-zone-text">
                                                <i class="fa fa-camera" style="font-size: 24px; color: #007bff;"></i>
                                            </p>
                                            <input type="file" id="file-input" class="drop-zone-input" multiple>
                                            <div id="preview-container" class="row preview-container"></div> <!-- Added for preview -->
                                        </div>
                                    </div>
                                }
                                <div class="col-12">
                                    <textarea id="mainRemark" rows="2" class="form-control" placeholder="หมายเหตุ" @(PJM_Actiontype == "submit" ? "disabled" : "")> @PJMUnitFormRemark </textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col-6">
                            <label class="form-label">&nbsp; แก้ไขล่าสุด @PJM_ActionDate</label>
                        </div>
                        <div class="col-6">
                            <div class="justify-content-end">
                                @if (PJM_Actiontype != "submit")
                                {
                                    <input type="hidden" id="UnitFormID" value="@UnitFormID" />
                                    <input type="hidden" id="ProjectID" value="@ProjectID" />
                                    <input type="hidden" id="UnitID" value="@UnitID" />
                                    <input type="hidden" id="UnitCode" value="@UnitCode" />
                                    <input type="hidden" id="FormID" value="@FormID" />
                                    <button class="btn" onclick="saveOrSubmit('save')">Save</button>
                                    <button class="btn btn-primary" onclick="saveOrSubmit('submit')">Submit</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal show image -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">รูปภาพ</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Label and Images for RoleID = 1 -->
                    <div class="row g-2 g-md-3">
                        <label class="form-label" id="role1-label">รูปภาพวิศวะกร</label>
                    </div>
                    <div class="row g-2 g-md-3" id="image-container-role-1">
                        <!-- Images for RoleID = 1 will be injected here -->
                    </div>

                    <!-- Label and Images for RoleID = 2 -->
                    <div class="row g-2 g-md-3 mt-4">
                        <label class="form-label" id="role2-label">รูปภาพวิศวะกรผู้คุมโครงการ</label>
                    </div>
                    <div class="row g-2 g-md-3" id="image-container-role-2">
                        <!-- Images for RoleID = 2 will be injected here -->
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
@section scripts{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://kit.fontawesome.com/21fea36ed8.js" crossorigin="anonymous"></script>
    <script>

        $(document).ready(function () {
            function adjustTextareaRows() {
                if ($(window).width() <= 576) {
                    $('textarea.form-control').attr('rows', 4);
                } else {
                    $('textarea.form-control').attr('rows', 2);
                }
            }

            adjustTextareaRows(); // Initial call
            $(window).resize(adjustTextareaRows); // Call on window resize
        });

        function toggleRadio(radio) {
            // Check if the radio button was already checked
            if (radio.checked && radio.dataset.wasChecked) {
                // If so, uncheck it
                radio.checked = false;
                radio.dataset.wasChecked = "";
            } else {
                // Uncheck all radios in the same group
                var radios = document.getElementsByName(radio.name);
                for (var i = 0; i < radios.length; i++) {
                    radios[i].dataset.wasChecked = "";
                }
                // Set the current radio as checked
                radio.dataset.wasChecked = "true";
            }
        }

        function openModal(UnitFormID, GroupID, FormID) {
            // Fetch images for RoleID = 1
            $.ajax({
                url: '@ViewBag.baseUrl' + 'PMApprove/GetImages',
                type: 'GET',
                data: { UnitFormID: UnitFormID, GroupID: GroupID, FormID: FormID , RoleID: 1 },
                success: function (images) {
                    // Update the modal with the fetched images for RoleID = 1
                    var containerRole1 = $('#image-container-role-1');
                    containerRole1.empty(); // Clear any previous images

                    images.forEach(function (image) {
                        var imageHtml = `
                            <div class="col-6 position-relative">
                                <a data-fslightbox="gallery1" href="${image.FilePath}">
                                    <img src="${image.FilePath}" alt="..." class="img-thumbnail">
                                </a>
                            </div>
                        `;
                        containerRole1.append(imageHtml);
                    });

                    // Reinitialize fslightbox for the newly added images in Role 1 container
                    refreshFsLightbox(); // Call this function to reinitialize the lightbox
                },
                error: function (error) {
                    console.error('Failed to fetch images for RoleID 1:', error);
                }
            });

            // Fetch images for RoleID = 2
            $.ajax({
                url: '@ViewBag.baseUrl' + 'PMApprove/GetImages',
                type: 'GET',
                data: { UnitFormID: UnitFormID, GroupID: GroupID , FormID: FormID , RoleID: 2 },
                success: function (images) {
                    // Update the modal with the fetched images for RoleID = 2
                    var containerRole2 = $('#image-container-role-2');
                    containerRole2.empty(); // Clear any previous images

                    images.forEach(function (image) {
                        var imageHtml = `
                            <div class="col-6 position-relative">
                                <a data-fslightbox="gallery2" href="${image.FilePath}">
                                    <img src="${image.FilePath}" alt="..." class="img-thumbnail">
                                </a>
                            </div>
                        `;
                        containerRole2.append(imageHtml);
                    });

                    // Reinitialize fslightbox for the newly added images in Role 2 container
                    refreshFsLightbox(); // Call this function to reinitialize the lightbox
                },
                error: function (error) {
                    console.error('Failed to fetch images for RoleID 2:', error);
                }
            });

            // Show the modal after both AJAX calls have been made
            var myModal = new bootstrap.Modal(document.getElementById('exampleModal'));
            myModal.show();
        }

        function deleteImage(resourceId) {
                Swal.fire({
                    title: '',
                    text: "ต้องการลลบรูปภาพหรือไม่?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'ลบรูปภาพ',
                    cancelButtonText: 'ยกเลิก'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Perform the deletion via an AJAX call
                        $.ajax({
                            url: '@ViewBag.baseUrl' + 'FormCheckList/DeleteImage',
                            type: 'POST',
                            data: { resourceId: resourceId },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire('ลบรูปภาพสำเร็จ', '', 'success');
                                    // Remove the image from the DOM
                                    $(`[onclick="deleteImage('${resourceId}')"]`).closest('.position-relative').remove();
                                } else {
                                    Swal.fire('Error!', response.message, 'error');
                                }
                            },
                            error: function (xhr, status, error) {
                                Swal.fire('Error!', 'An error occurred while processing your request.', 'error');
                            }
                        });
                    }
                });
            }

            document.addEventListener("DOMContentLoaded", function () {
                var dropZone = document.getElementById("drop-zone");
                var fileInput = document.getElementById("file-input");
                var previewContainer = document.getElementById("preview-container");

                dropZone.addEventListener("click", function (e) {
                    // Prevent triggering file input click when clicking the remove button
                    if (e.target.classList.contains("remove-button")) {
                        return;
                    }
                    fileInput.click();
                });

                fileInput.addEventListener("change", function () {
                    if (fileInput.files.length) {
                        previewFiles(fileInput.files);
                    }
                });

                dropZone.addEventListener("dragover", function (e) {
                    e.preventDefault();
                    dropZone.classList.add("drop-zone--over");
                });

                dropZone.addEventListener("dragleave", function () {
                    dropZone.classList.remove("drop-zone--over");
                });

                dropZone.addEventListener("drop", function (e) {
                    e.preventDefault();
                    fileInput.files = e.dataTransfer.files;
                    previewFiles(fileInput.files);
                });

                function previewFiles(files) {
                    previewContainer.innerHTML = ""; // Clear previous previews
                    Array.from(files).forEach(file => {
                        if (file.type.startsWith("image/")) {
                            const reader = new FileReader();
                            reader.readAsDataURL(file);
                            reader.onload = function (event) {
                                const img = document.createElement("img");
                                img.src = event.target.result;
                                const previewImage = document.createElement("div");
                                previewImage.className = "col-4 preview-image";

                                const removeButton = document.createElement("button");
                                removeButton.className = "remove-button";
                                removeButton.innerHTML = "&times;";
                                removeButton.addEventListener("click", function (e) {
                                    e.stopPropagation(); // Stop event from bubbling up to the dropzone
                                    previewImage.remove();
                                });

                                previewImage.appendChild(img);
                                previewImage.appendChild(removeButton);
                                previewContainer.appendChild(previewImage);
                            };
                        }
                    });
                }
            });


    function saveOrSubmit(actionType) {
        var data = new FormData();

        data.append("ActionType", actionType);
        data.append("Remark", document.getElementById("mainRemark").value);
        data.append("UnitFormID", document.getElementById("UnitFormID").value);
        data.append("ProjectID", document.getElementById("ProjectID").value);
        data.append("UnitID", document.getElementById("UnitID").value);
        data.append("FormID", document.getElementById("FormID").value);

        var passConditions = [];
        $("input[data-action='gr-pass']:checked").each(function () {
            let group_id = $(this).attr("group-id");
            let passconID = $(this).attr("passconID");
            let statusID = $(this).val();
            let remark = document.getElementById(`remark_${group_id}`).value;

            passConditions.push({
                PC_ID: passconID,
                Group_ID: group_id,
                StatusID: statusID,
                PJM_Remark: remark
            });
        });

        if (passConditions.length > 0) {
            data.append("PassConditionsIUD", JSON.stringify(passConditions));
        }

        // Collect images if any
        var files = document.getElementById("file-input").files;
        for (var i = 0; i < files.length; i++) {
            data.append("Images", files[i]);
        }

        console.log(data);

        // Send the data using AJAX
        $.ajax({
            url: '@ViewBag.baseUrl' + '/PJMApprove/SaveOrSubmit', // Ensure the URL matches your controller action
            type: 'POST',
            contentType: false,
            processData: false,
            data: data,
            success: function (res) {
                if (res.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Data has been successfully ' + actionType + 'd.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.reload();
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to ' + actionType + ' the data.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            },
            error: function (xhr, status, error) {
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while processing the request.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    }


    </script>
}